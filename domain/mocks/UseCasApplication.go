// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entity "CareerCenter/domain/entity"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// UseCasApplication is an autogenerated mock type for the UseCasApplication type
type UseCasApplication struct {
	mock.Mock
}

// SendApplication provides a mock function with given fields: ctx, email, apply
func (_m *UseCasApplication) SendApplication(ctx context.Context, email string, apply *entity.ApplicationRequest) error {
	ret := _m.Called(ctx, email, apply)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string, *entity.ApplicationRequest) error); ok {
		r0 = rf(ctx, email, apply)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewUseCasApplication interface {
	mock.TestingT
	Cleanup(func())
}

// NewUseCasApplication creates a new instance of UseCasApplication. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUseCasApplication(t mockConstructorTestingTNewUseCasApplication) *UseCasApplication {
	mock := &UseCasApplication{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
