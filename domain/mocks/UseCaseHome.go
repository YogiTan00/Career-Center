// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entity "CareerCenter/domain/entity"
	filter "CareerCenter/domain/entity/filter"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// UseCaseHome is an autogenerated mock type for the UseCaseHome type
type UseCaseHome struct {
	mock.Mock
}

// GetHome provides a mock function with given fields: ctx, f, email
func (_m *UseCaseHome) GetHome(ctx context.Context, f *filter.FilterHomeDTO, email string) (*entity.HomePageDTO, error) {
	ret := _m.Called(ctx, f, email)

	var r0 *entity.HomePageDTO
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *filter.FilterHomeDTO, string) (*entity.HomePageDTO, error)); ok {
		return rf(ctx, f, email)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *filter.FilterHomeDTO, string) *entity.HomePageDTO); ok {
		r0 = rf(ctx, f, email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*entity.HomePageDTO)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *filter.FilterHomeDTO, string) error); ok {
		r1 = rf(ctx, f, email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewUseCaseHome interface {
	mock.TestingT
	Cleanup(func())
}

// NewUseCaseHome creates a new instance of UseCaseHome. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewUseCaseHome(t mockConstructorTestingTNewUseCaseHome) *UseCaseHome {
	mock := &UseCaseHome{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
