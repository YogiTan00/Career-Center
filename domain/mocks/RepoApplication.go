// Code generated by mockery v2.20.0. DO NOT EDIT.

package mocks

import (
	entity "CareerCenter/domain/entity"
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// RepoApplication is an autogenerated mock type for the RepoApplication type
type RepoApplication struct {
	mock.Mock
}

// SendApplication provides a mock function with given fields: ctx, application
func (_m *RepoApplication) SendApplication(ctx context.Context, application *entity.Application) error {
	ret := _m.Called(ctx, application)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *entity.Application) error); ok {
		r0 = rf(ctx, application)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRepoApplication interface {
	mock.TestingT
	Cleanup(func())
}

// NewRepoApplication creates a new instance of RepoApplication. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRepoApplication(t mockConstructorTestingTNewRepoApplication) *RepoApplication {
	mock := &RepoApplication{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
